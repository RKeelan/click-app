[project]
name = "{{ cookiecutter.package_name }}"
version = "0.1"
description = "{{ cookiecutter.description or '' }}"
readme = "README.md"
authors = [{name = "{{ cookiecutter.author_name }}"}]
license = {file = "LICENSE"}
requires-python = ">=3.9"
classifiers = []
dependencies = [
    "click"
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
{% if cookiecutter.github_username %}
[project.urls]
Homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.app_name }}"
Changelog = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.app_name }}/releases"
Issues = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.app_name }}/issues"
CI = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.app_name }}/actions"
{% endif %}
[project.scripts]
{{ cookiecutter.app_name }} = "{{ cookiecutter.package_folder }}.cli:cli"

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
dev = ["ruff", "pre-commit"]

# Coverage configuration
[tool.coverage.run]
branch = true
source = ["{{ cookiecutter.package_folder }}"]
omit = ["*/__main__.py", "tests/*"]

[tool.coverage.report]
show_missing = true
precision     = 1
fail_under    = 75

# Ruff configuration
[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.format]
# Use Black-compatible formatting
quote-style = "double"
indent-style = "space"

[tool.ruff.lint]
# Enable essential rule sets
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort (import sorting)
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []

[tool.ruff.lint.isort]
# Sort imports
known-first-party = ["{{ cookiecutter.package_folder }}"]
